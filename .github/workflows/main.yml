# This is a basic workflow to help you get started with Actions

name: CI

env:
  IMAGE_NAME: appui-comment
  TAGS: latest

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
          
       # Setup and Build
      - name: Setup and Build
        id: build_common
        uses: redhat-actions/s2i-build@v2
        with:
          path_context: './appui-common'
          # Builder image for a java project
          builder_image: 'registry.access.redhat.com/openjdk/openjdk-11-rhel7'
          image: appui-common
          tags: ${{ env.TAGS }}
          
      - name: Setup and Build
        id: build_image
        uses: redhat-actions/s2i-build@v2
        with:
          path_context: './appui-comment'
          # Builder image for a java project
          builder_image: 'registry.access.redhat.com/openjdk/openjdk-11-rhel7'
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ env.TAGS }}
          
      - name: Pull Image from Docker
        run: /usr/bin/podman pull docker-daemon:appui-comment:latest
        
      - name: Remove Image from Docker
        run: /usr/bin/docker rmi appui-comment:latest

      # Push Image to Docker registry
      - name: Push To Docker Action
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ env.TAGS }}     
          registry: docker.io/aproresco
          username: aproresco
          password: 7608cf6e-6ca2-4bbb-81aa-a8bc453ea864
